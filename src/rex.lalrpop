grammar;

pub rexStmt: String = {
    CREATE <e:rexExpr> SEMI             => e,
    LET <id:Id> MATCH <re:rexExpr> SEMI => format!("{id} = {re}")
};

rexExpr: String = {
    <re:rexExpr> OR <rt:rexTerm> => format!("{re}|{rt}"),
    rexTerm,
};

rexTerm: String = {
    <rt:rexTerm> AND <rf:rexFactor> => format!("{rt}{rf}"),
    rexFactor,
};

rexFactor: String = {
    <rf:rexFactor> REPEAT => format!("{rf}*"),
    rexUnit,
};

rexUnit: String = {
    Id                 => <>.to_string(),
    Str                => <>.to_string(),
    LP <re:rexExpr> RP => format!("({re})"),
};

////////////
// TOKENS //
////////////
match {
   r"\$[\w--\$]+" => Id,
    "create"        => CREATE,
    "let"           => LET,
    "match"         => MATCH,
    "or"            => OR,
    "and"           => AND,
    "repeat"        => REPEAT,
    "("             => LP,
    ")"             => RP,
    ";"             => SEMI,
    "$"             => DOLLAR,
    "'"             => SQUOTE,
    "\""            => DQUOTE,
} else {
   r"[.--[\s\$]]+"  => Str, // separate because the regex overlaps with Id
}
